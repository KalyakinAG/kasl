//  Подсистема "Работа с итератором"
//	Автор: Калякин Андрей Г.
//  Описание размещено на ресурсе: https://infostart.ru/public/802147
//	Версия 1.01 
//	Версия 1.02
//	Рефакторинг: ПолучитьСтруктуруИтератораВыборки->Итератор
//  - Итератор - добавлен параметр ЕстьИтоги
//  Новые функции: Следующий

// Возвращает структуру Итератора для последующего использования в функции Следующий()
//
// Параметры:
//  Источник  			- РезультатЗапроса, ВыборкаИзРезультатаЗапроса, ТаблицаЗначений, ТабличнаяЧасть, СтруктураЗначений - структура значений для итератора верхнего уровня
//  ПоляГруппировки 	- Строка, Массив
//
// Возвращаемое значение:
//  Структура   	- 
//
Функция Итератор(Знач Источник, Знач ПоляГруппировки = Неопределено, ЕстьИтоги = Ложь) Экспорт
	//  Структура полей, поля
	Если ТипЗнч(ПоляГруппировки) = Тип("Строка") Тогда
		СтруктураПолей	= Новый Структура(ПоляГруппировки);
		ПоляГруппировки = СтрРазделить(СтрЗаменить(ПоляГруппировки, " ", ""), ",");
	ИначеЕсли ПоляГруппировки <> Неопределено Тогда
		СтруктураПолей	= Новый Структура;
		Для каждого Поле Из ПоляГруппировки Цикл
			СтруктураПолей.Вставить(Поле, Неопределено);
		КонецЦикла;
	КонецЕсли;
	//  Ведущий итератор, источник
	Если ТипЗнч(Источник) = Тип("Структура") Тогда
		ВедущийИтератор 	  	= Источник;
		Источник 			  	= ВедущийИтератор.Источник;
		МаксИндексСтроки	  	= ВедущийИтератор.МаксИндексСтроки;
		ИндексПервойСтроки		= 0;
		ИндексПоследнейСтроки	= МаксИндексСтроки;
		ЕстьИтоги 	= ВедущийИтератор.ЕстьИтоги;
		ЭтоТаблица 	= ВедущийИтератор.ЭтоТаблица;
	Иначе
		ВедущийИтератор 	  = Неопределено;
		ТипЗначения = ТипЗнч(Источник);
		Если ТипЗначения = Тип("РезультатЗапроса") Тогда
		    МаксИндексСтроки		= Неопределено;
			ИндексПервойСтроки		= Неопределено;
			ИндексПоследнейСтроки	= Неопределено;
			ЭтоТаблица 	= Ложь;
		Иначе
			МаксИндексСтроки		= Источник.Количество() - 1;
			ИндексПервойСтроки		= 0;
			ИндексПоследнейСтроки	= МаксИндексСтроки;
			ЭтоТаблица 	= (ТипЗначения = Тип("ТаблицаЗначений"));
		КонецЕсли; 
	КонецЕсли;
	//  Структура итератора
	СтруктураИтератора = Новый Структура;
	//  Ведущий итератор
	СтруктураИтератора.Вставить("ВедущийИтератор",		ВедущийИтератор);
	//  Данные
	СтруктураИтератора.Вставить("Источник",				Источник);				//  РезультатЗапроса, ВыборкаИзРезультатаЗапроса, ТаблицаЗначений
	СтруктураИтератора.Вставить("ИндексПервойСтроки",	ИндексПервойСтроки);	//  используется для таблицы
	СтруктураИтератора.Вставить("ИндексПоследнейСтроки",ИндексПоследнейСтроки);	//  используется для таблицы
	СтруктураИтератора.Вставить("МаксИндексСтроки",		МаксИндексСтроки);
	СтруктураИтератора.Вставить("ТекущаяСтрока",		Неопределено);			//  Индекс текущей строки таблицы значений
	СтруктураИтератора.Вставить("ТекущиеДанные",		Неопределено);			//  ВыборкаИзРезультатаЗапроса, СтрокаТаблицыЗначений
	СтруктураИтератора.Вставить("Выбран",				Ложь);
	//  Поля группировки
	СтруктураИтератора.Вставить("ПоляГруппировки",		ПоляГруппировки);		//  Массив    - используется для РезультатЗапроса, ВыборкаИзРезультатаЗапроса 
	СтруктураИтератора.Вставить("СтруктураПолей",		СтруктураПолей); 		//  Структура - используется для ТаблицаЗначений
	СтруктураИтератора.Вставить("ИндексПоследнегоПоля",	?(ПоляГруппировки <> Неопределено, ПоляГруппировки.ВГраница(), Неопределено));
	//  Дополнительные данные
	СтруктураИтератора.Вставить("ВложенныеВыборки",		Новый Массив);			//   Массив
	СтруктураИтератора.Вставить("ЕстьИтоги",			ЕстьИтоги);
	СтруктураИтератора.Вставить("ЭтоТаблица",			ЭтоТаблица);
	Возврат СтруктураИтератора;
КонецФункции // ПолучитьСтруктуруИтератора()

Функция СледующийИзВыборкиСИтогами(СтруктураИтератора) Экспорт
	ПоляГруппировки   		= СтруктураИтератора.ПоляГруппировки;
	Выбран 					= СтруктураИтератора.Выбран;
	Если ПоляГруппировки = Неопределено Тогда	//  Детальные данные
		Если Не Выбран Тогда //  Инициализация детальной выборки
			ВедущийИтератор	= СтруктураИтератора.ВедущийИтератор;
			Если ВедущийИтератор <> Неопределено Тогда
				ТекущиеДанные = ВедущийИтератор.ТекущиеДанные.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "");
			Иначе
				ТекущиеДанные = СтруктураИтератора.Источник.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "");
			КонецЕсли; 
			СтруктураИтератора.ТекущиеДанные = ТекущиеДанные;
		КонецЕсли; 
		Выбран = СтруктураИтератора.ТекущиеДанные.Следующий();
	Иначе										//  Данные группировки
		ВложенныеВыборки	  = СтруктураИтератора.ВложенныеВыборки;
		ИндексПоследнегоПоля	  = СтруктураИтератора.ИндексПоследнегоПоля;
		ИндексПоляГруппировки = -1;
		Если Выбран Тогда  //  Движение по группировке выборки
			Выбран = Ложь;
			Для Индекс = 0 По ИндексПоследнегоПоля Цикл // <==|
				ИндексПоляГруппировки = ИндексПоследнегоПоля - Индекс;
				Если ВложенныеВыборки[ИндексПоляГруппировки].Следующий() Тогда
					Выбран = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если Выбран И ИндексПоляГруппировки < ИндексПоследнегоПоля Тогда
				Для Индекс = ИндексПоляГруппировки + 1 По ИндексПоследнегоПоля Цикл // |==>
					ВложеннаяВыборка = ВложенныеВыборки[Индекс-1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, ПоляГруппировки[Индекс]);
					ВложеннаяВыборка.Следующий();
					ВложенныеВыборки[Индекс] = ВложеннаяВыборка;
				КонецЦикла;
				СтруктураИтератора.ТекущиеДанные = ВложеннаяВыборка;
			КонецЕсли; 
		Иначе			   //  Инициализация выборки по группировке
			Выбран = Истина;
			Для Индекс = 0 По ИндексПоследнегоПоля Цикл
				Если Индекс = 0 Тогда
					ВложенныеВыборки.Очистить();
					ВедущийИтератор   		= СтруктураИтератора.ВедущийИтератор;
					Если ВедущийИтератор <> Неопределено Тогда
						ВложеннаяВыборка = ВедущийИтератор.ТекущиеДанные;
					Иначе
						ВложеннаяВыборка = СтруктураИтератора.Источник;
					КонецЕсли; 
				КонецЕсли;
				ВложеннаяВыборка = ВложеннаяВыборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, ПоляГруппировки[Индекс]);
				Если Не ВложеннаяВыборка.Следующий() Тогда
					Выбран = Ложь;
					Прервать;
				КонецЕсли;
				ВложенныеВыборки.Добавить(ВложеннаяВыборка);
			КонецЦикла;
			СтруктураИтератора.ТекущиеДанные = ВложеннаяВыборка;
		КонецЕсли;
	КонецЕсли;
	СтруктураИтератора.Выбран = Выбран;
	Возврат Выбран;
КонецФункции

Функция СледующийИзВыборки(СтруктураИтератора) Экспорт
	ПоляГруппировки   		= СтруктураИтератора.ПоляГруппировки;
	ТекущиеДанные 			= СтруктураИтератора.ТекущиеДанные;
	ИндексПоследнегоПоля		= СтруктураИтератора.ИндексПоследнегоПоля;
	Выбран 					= СтруктураИтератора.Выбран;
	Если ПоляГруппировки = Неопределено Тогда	//  Детальные данные
		Если Не Выбран Тогда //  Инициализация детальной выборки
			ВедущийИтератор	= СтруктураИтератора.ВедущийИтератор;
			Если ВедущийИтератор <> Неопределено Тогда
				ТекущиеДанные = ВедущийИтератор.ТекущиеДанные;
			Иначе
				ТекущиеДанные = СтруктураИтератора.Источник.Выбрать(ОбходРезультатаЗапроса.Прямой);
			КонецЕсли; 
		КонецЕсли; 
		Выбран = ТекущиеДанные.Следующий();
		СтруктураИтератора.ТекущиеДанные = ТекущиеДанные;
	Иначе										//  Данные группировки
		ИндексПоляГруппировки	= -1;
		Если Выбран Тогда  //  Движение по группировке выборки
			Выбран = Ложь;
			Для Индекс = 0 По ИндексПоследнегоПоля Цикл // <==|
				ИндексПоляГруппировки = ИндексПоследнегоПоля - Индекс;
				Если ТекущиеДанные.СледующийПоЗначениюПоля(ПоляГруппировки[ИндексПоляГруппировки]) Тогда
					Выбран = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если Выбран Тогда
				Для Индекс = ИндексПоляГруппировки + 1 По ИндексПоследнегоПоля Цикл // |==>
					ТекущиеДанные.СледующийПоЗначениюПоля(ПоляГруппировки[Индекс]);
				КонецЦикла;
			КонецЕсли; 
		Иначе			   //  Инициализация выборки по группировке
			Выбран = Истина;
			Для Индекс = 0 По ИндексПоследнегоПоля Цикл
				Если Индекс = 0 Тогда
					ВедущийИтератор   		= СтруктураИтератора.ВедущийИтератор;
					Если ВедущийИтератор <> Неопределено Тогда
						ТекущиеДанные = ВедущийИтератор.ТекущиеДанные;
					Иначе
						ТекущиеДанные = СтруктураИтератора.Источник.Выбрать(ОбходРезультатаЗапроса.Прямой);
					КонецЕсли; 
				КонецЕсли;
				Если Не ТекущиеДанные.СледующийПоЗначениюПоля(ПоляГруппировки[Индекс]) Тогда
					Выбран = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			СтруктураИтератора.ТекущиеДанные = ТекущиеДанные;
		КонецЕсли;
	КонецЕсли;
	СтруктураИтератора.Выбран = Выбран;
	Возврат Выбран;
КонецФункции

Функция СледующийИзТаблицы(СтруктураИтератора) Экспорт 
	ПоляГруппировки   		= СтруктураИтератора.ПоляГруппировки;
	Источник				= СтруктураИтератора.Источник;
	ТекущаяСтрока 			= СтруктураИтератора.ТекущаяСтрока;
	Выбран 					= СтруктураИтератора.Выбран;
	ИндексПервойСтроки 		= СтруктураИтератора.ИндексПервойСтроки;
	ИндексПоследнейСтроки 	= СтруктураИтератора.ИндексПоследнейСтроки;
	МаксИндексСтроки 		= СтруктураИтератора.МаксИндексСтроки;
	Если ПоляГруппировки = Неопределено Тогда	//  Детальные данные
		Если Выбран Тогда
			Выбран = Ложь;
			ТекущаяСтрока = ТекущаяСтрока + 1;
			Если ТекущаяСтрока <= ИндексПоследнейСтроки Тогда
				Выбран = Истина;
				СтруктураИтератора.ТекущаяСтрока = ТекущаяСтрока;
				СтруктураИтератора.ТекущиеДанные = Источник[ТекущаяСтрока];
			Иначе
				СтруктураИтератора.ТекущаяСтрока = Неопределено;
				СтруктураИтератора.ТекущиеДанные = Неопределено;
			КонецЕсли;
		Иначе //  Инициализация детальной выборки
			ВедущийИтератор	= СтруктураИтератора.ВедущийИтератор;
			Если ВедущийИтератор <> Неопределено Тогда
				ИндексПервойСтроки    = ВедущийИтератор.ИндексПервойСтроки;
				ИндексПоследнейСтроки = ВедущийИтератор.ИндексПоследнейСтроки;
				СтруктураИтератора.МаксИндексСтроки = ВедущийИтератор.МаксИндексСтроки;
			КонецЕсли;
			Выбран = Истина;
			СтруктураИтератора.ИндексПервойСтроки 	 = ИндексПервойСтроки;
			СтруктураИтератора.ИндексПоследнейСтроки = ИндексПоследнейСтроки;
			СтруктураИтератора.ТекущаяСтрока = ИндексПервойСтроки;
			СтруктураИтератора.ТекущиеДанные = Источник[ИндексПервойСтроки];
		КонецЕсли; 
	Иначе										//  Данные группировки
		СтруктураПолей   	  = СтруктураИтератора.СтруктураПолей;
		Если Выбран Тогда  //  Движение по группировке выборки
			Выбран = Ложь;
			ИндексПервойСтроки = ИндексПоследнейСтроки + 1;
			ИндексПоследнейСтроки = Неопределено;
			Если ИндексПервойСтроки <= МаксИндексСтроки Тогда
				Выбран = Истина;
			Иначе
				СтруктураИтератора.ТекущаяСтрока = Неопределено;
				СтруктураИтератора.ТекущиеДанные = Неопределено;
			КонецЕсли;
		Иначе			   //  Инициализация выборки по группировке
			Выбран = Истина;
			ВедущийИтератор	= СтруктураИтератора.ВедущийИтератор;
			Если ВедущийИтератор <> Неопределено Тогда
				ИндексПервойСтроки = ВедущийИтератор.ИндексПервойСтроки;
				МаксИндексСтроки   = ВедущийИтератор.ИндексПоследнейСтроки;
				СтруктураИтератора.МаксИндексСтроки = МаксИндексСтроки;
			КонецЕсли;
		КонецЕсли;
		Если Выбран Тогда
			ИндексПоследнейСтроки = Неопределено;
			ЗаполнитьЗначенияСвойств(СтруктураПолей, Источник[ИндексПервойСтроки]);
			Для Индекс = ИндексПервойСтроки + 1 По МаксИндексСтроки Цикл
				ТекущиеДанные = Источник[Индекс];
				Для каждого Поле Из ПоляГруппировки Цикл
					Если ТекущиеДанные[Поле] <> СтруктураПолей[Поле] Тогда
						ИндексПоследнейСтроки = Индекс - 1;
						Прервать;
				    КонецЕсли;
				КонецЦикла;
				Если ИндексПоследнейСтроки <> Неопределено Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла; 
			Если ИндексПоследнейСтроки = Неопределено Тогда
				ИндексПоследнейСтроки = МаксИндексСтроки;
			КонецЕсли;
			СтруктураИтератора.ИндексПервойСтроки 	 = ИндексПервойСтроки;
			СтруктураИтератора.ИндексПоследнейСтроки = ИндексПоследнейСтроки;
			СтруктураИтератора.ТекущаяСтрока 		 = ИндексПервойСтроки;
			СтруктураИтератора.ТекущиеДанные 		 = Источник[ИндексПервойСтроки];
		КонецЕсли;
	КонецЕсли;
	СтруктураИтератора.Выбран = Выбран;
	Возврат Выбран;
КонецФункции

Функция Следующий(СтруктураИтератора) Экспорт
	Если СтруктураИтератора.ЭтоТаблица Тогда
		Возврат СледующийИзТаблицы(СтруктураИтератора);
	ИначеЕсли СтруктураИтератора.ЕстьИтоги Тогда
		Возврат СледующийИзВыборкиСИтогами(СтруктураИтератора);
	Иначе
		Возврат СледующийИзВыборки(СтруктураИтератора);
	КонецЕсли;
КонецФункции
